/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Views.Doctor;

import java.awt.Color;
import java.awt.Component;
import java.awt.event.ActionListener;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListCellRenderer;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.ListCellRenderer;
import javax.swing.UIManager;
import models.Appointment;
import models.Medicine;
import models.user.Patient;

/**
 *
 * @author richa_bfe6tpy
 */
public class DoctorCreatePerscriptionView extends javax.swing.JPanel {

    /**
     * Creates new form DoctorCreatePerscriptionView
     */
    public DoctorCreatePerscriptionView() {
        initComponents();
        DoctorCreatePerscriptionAppointmentSelector.setRenderer(createListRenderer());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        DoctorCreatePerscriptionHeaderLabel = new javax.swing.JLabel();
        DoctorCreatePersciptionSubmitButton = new javax.swing.JButton();
        DoctorCreatePerscriptionBackButton = new javax.swing.JButton();
        DoctorCreatePerscriptionPatientSelector = new javax.swing.JComboBox<>();
        DoctorCreatePerscriptionMedicineSelector = new javax.swing.JComboBox<>();
        DoctorCreatePerscriptionPatienLabel = new javax.swing.JLabel();
        DoctorCreatePerscrioptionMedicineLabel = new javax.swing.JLabel();
        DoctorCreatePerscriptionAppointmentSelector = new javax.swing.JComboBox<>();
        DoctorCreatePerscriptionAppointmentLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        DoctorCreatePerscriptionDosageTextEntry = new javax.swing.JTextArea();
        DoctorCreatePerscriptionDosageLabel = new javax.swing.JLabel();
        DoctorCreatePerscriptionQuantitySelector = new javax.swing.JSpinner();

        DoctorCreatePerscriptionHeaderLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        DoctorCreatePerscriptionHeaderLabel.setText("Create A Perscription");

        DoctorCreatePersciptionSubmitButton.setText("Submit");

        DoctorCreatePerscriptionBackButton.setText("Back");

        DoctorCreatePerscriptionPatienLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        DoctorCreatePerscriptionPatienLabel.setText("Patient:");

        DoctorCreatePerscrioptionMedicineLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        DoctorCreatePerscrioptionMedicineLabel.setText("Medicine:");

        DoctorCreatePerscriptionAppointmentLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        DoctorCreatePerscriptionAppointmentLabel.setText("Attach appointment Notes:");

        DoctorCreatePerscriptionDosageTextEntry.setColumns(20);
        DoctorCreatePerscriptionDosageTextEntry.setRows(5);
        jScrollPane1.setViewportView(DoctorCreatePerscriptionDosageTextEntry);

        DoctorCreatePerscriptionDosageLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        DoctorCreatePerscriptionDosageLabel.setText("Dosage:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(DoctorCreatePerscriptionHeaderLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(DoctorCreatePerscriptionBackButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(DoctorCreatePersciptionSubmitButton))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(DoctorCreatePerscriptionMedicineSelector, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(DoctorCreatePerscriptionQuantitySelector, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 198, Short.MAX_VALUE))
                            .addComponent(DoctorCreatePerscriptionDosageLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(DoctorCreatePerscriptionAppointmentSelector, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(DoctorCreatePerscrioptionMedicineLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(DoctorCreatePerscriptionAppointmentLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(DoctorCreatePerscriptionPatientSelector, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(DoctorCreatePerscriptionPatienLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(DoctorCreatePerscriptionHeaderLabel)
                .addGap(32, 32, 32)
                .addComponent(DoctorCreatePerscriptionPatienLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(DoctorCreatePerscriptionPatientSelector, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(DoctorCreatePerscrioptionMedicineLabel)
                .addGap(1, 1, 1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DoctorCreatePerscriptionMedicineSelector, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DoctorCreatePerscriptionQuantitySelector, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(DoctorCreatePerscriptionAppointmentLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(DoctorCreatePerscriptionAppointmentSelector, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(DoctorCreatePerscriptionDosageLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 104, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DoctorCreatePersciptionSubmitButton)
                    .addComponent(DoctorCreatePerscriptionBackButton))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    public void setPatientList(DefaultComboBoxModel model){
        DoctorCreatePerscriptionPatientSelector.setModel(model);
    }
    
    public Patient getSelectedPatient(){
        return (Patient)DoctorCreatePerscriptionPatientSelector.getSelectedItem();
    }
    
    public void setAppointmentsList(DefaultComboBoxModel model){
        DoctorCreatePerscriptionAppointmentSelector.setModel(model);
    }
    
    public Appointment getSelectedAppointment(){
        return (Appointment) DoctorCreatePerscriptionAppointmentSelector.getSelectedItem();
    }
    
    public void setMedicineList(DefaultComboBoxModel model){
        DoctorCreatePerscriptionMedicineSelector.setModel(model);
    }
    
    public Medicine getSelectedMedicine(){
        return (Medicine) DoctorCreatePerscriptionMedicineSelector.getSelectedItem();
    }
    
    public void addBackListener(ActionListener listenForBack){
        DoctorCreatePerscriptionBackButton.addActionListener(listenForBack);
    }
    
    public void addSubmitListner(ActionListener listenForSubmit){
        DoctorCreatePersciptionSubmitButton.addActionListener(listenForSubmit);
    }
    
    public void addChangePatientListener (ActionListener listenForPatientChange)
    {
        DoctorCreatePerscriptionPatientSelector.addActionListener(listenForPatientChange);
    }
    
    public void clearAppointments(){
        DoctorCreatePerscriptionAppointmentSelector.removeAll();
    }
    
    public String getPerscriptionDosage(){
        return DoctorCreatePerscriptionDosageTextEntry.getText();
    }
    
    public int getPerscriptionQuantity(){
        return (Integer)DoctorCreatePerscriptionQuantitySelector.getValue();
    }
    
    public void reset(){
        DoctorCreatePerscriptionMedicineSelector.setSelectedIndex(0);
        DoctorCreatePerscriptionPatientSelector.setSelectedIndex(0);
        DoctorCreatePerscriptionQuantitySelector.setValue(0);
        DoctorCreatePerscriptionDosageTextEntry.setText("");
        clearAppointments();
    }
    
     private static ListCellRenderer<? super Appointment> createListRenderer() {
      return new DefaultListCellRenderer() {
          private Color background = new Color(0, 100, 255, 15);
          private Color defaultBackground = (Color) UIManager.get("List.background");
          
          public Component getListCellRendererComponent(JList<?> list, Object value, int index,
                                                        boolean isSelected, boolean cellHasFocus) {
              Component c = super.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);
              if (c instanceof JLabel) {
                  JLabel label = (JLabel) c;
                  Appointment app = (Appointment) value;
                  if(app != null){
                      label.setText(String.format("%s",app.getAppointmentDate().toString()));
                  }
                  
                  if (!isSelected) {
                      label.setBackground(index % 2 == 0 ? background : defaultBackground);
                  }
              }
              return c;
          }
      };
     }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton DoctorCreatePersciptionSubmitButton;
    private javax.swing.JLabel DoctorCreatePerscrioptionMedicineLabel;
    private javax.swing.JLabel DoctorCreatePerscriptionAppointmentLabel;
    private javax.swing.JComboBox<Appointment> DoctorCreatePerscriptionAppointmentSelector;
    private javax.swing.JButton DoctorCreatePerscriptionBackButton;
    private javax.swing.JLabel DoctorCreatePerscriptionDosageLabel;
    private javax.swing.JTextArea DoctorCreatePerscriptionDosageTextEntry;
    private javax.swing.JLabel DoctorCreatePerscriptionHeaderLabel;
    private javax.swing.JComboBox<Medicine> DoctorCreatePerscriptionMedicineSelector;
    private javax.swing.JLabel DoctorCreatePerscriptionPatienLabel;
    private javax.swing.JComboBox<Patient> DoctorCreatePerscriptionPatientSelector;
    private javax.swing.JSpinner DoctorCreatePerscriptionQuantitySelector;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
